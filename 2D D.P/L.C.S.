//Question https://atcoder.jp/contests/dp/tasks/dp_f

int main() {
  string a;
  string b;
  cin>>a;
  cin>>b;
  int n = a.size();
  int m = b.size();
  int dp[n + 1][m + 1] = {0};
  for(int i = 0; i <= n; i++) {
      for(int j = 0; j <= m; j++) {
          if(i == 0 || j == 0) dp[i][j] = 0;
          else if(a[i - 1] == b[i - 1]) dp[i][j] = 1 + dp[i - 1][j - 1];
          else if(a[i - 1] != b [j - 1]) dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
          else {}
          }
    }
    cout<<dp[n][m];
    return 0;
}
        
